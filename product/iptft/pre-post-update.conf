#! /bin/bash

updatedir="${UPDATEDIR}"
tmpdir="${TMPDIR}"
logdir="${LOGDIR}"
PRE_UPDATE_RESULT_FILE="$logdir/pre.update.result.flag"
PRE_UPDATE_RESULT_MSG="$logdir/pre.update.result.msg"
POST_UPDATE_RESULT_FILE="$logdir/post.update.result.flag"
POST_UPDATE_RESULT_MSG="$logdir/post.update.result.msg"


EXIT_SUCCESS=0
EXIT_FAIL_NO_UPDATE_CONF=192
EXIT_FAIL_NO_HANOVER_CONF=193
EXIT_FAIL_NO_PRE_POST_CONF=194
EXIT_FAIL_NFS_MOUNT=195

# This function takes one parameter - command to execute
# Run it with disabled output and return the result. 
# 
function execute ()
{
    $* >/dev/null
    return $?
}
export -f execute

# This function takes one parameter - command to execute
# Run it with disabled output and check the result. In case of fault it will
# leave that is denoted by capital L.
function executeL ()
{
    #Redirect standard error stream to standard output
    2>&1
    #Execute the command
    $* >/dev/null
    #Check the return result, if it fails exit
    if [ $? -ne 0 ]; then
        echo "" | tee -a $update_log_file
        echo "ERROR: executing $*" | tee -a $update_log_file
        echo "" | tee -a $update_log_file
        exit $? 
    fi
}
export -f executeL
